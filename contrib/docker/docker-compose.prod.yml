services:
  api:
    image: diploma-base
    build:
      context: ../..
      dockerfile: contrib/docker/fastapi/Dockerfile
    env_file:
      - ../../.env
    depends_on:
      - postgres
    volumes:
      - ./fastapi/docker-entrypoint.d:/app/docker-entrypoint.d
    networks:
      - a

  postgres:
    build:
      context: ../../
      dockerfile: contrib/docker/postgres/Dockerfile
    restart: always
    env_file:
      - ../../.env
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql.conf
    networks:
      - a


  translation_consumer:
    image: diploma-base
    command:
      - "python"
      - "-m"
      - "src.manage"
      - "start_translator_consumer"
    env_file:
      - ../../.env
    volumes:
      - ./consumer/docker-entrypoint.d:/app/docker-entrypoint.d
    depends_on:
      - kafka
    networks:
      - a

  mail_consumer:
    image: diploma-base
    command:
      - "python"
      - "-m"
      - "src.manage"
      - "start_mail_consumer"
    env_file:
      - ../../.env
    volumes:
      - ./consumer/docker-entrypoint.d:/app/docker-entrypoint.d
    depends_on:
      - kafka
    networks:
      - a

  redis:
    image: redis:7.4.1
    restart: always
    networks:
      - a

  nginx:
    build:
      context: ../..
      dockerfile: contrib/docker/nginx/Dockerfile
    ports:
      - "80:8000"
      - "443:9000"
    depends_on:
      - api
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - a

volumes:
  pg_data:
    driver: local

networks:
  a:
    external: true
